{
    "collab_server" : "",
    "contents" : "rm(list = ls())\nsetwd('C:/Users/donvd/_Laptop/ResMas/Conference/TquanT/Shiny/JamesSteinRemake/')\nsource('functions.R')\n\n# tests\ntest = genData(nBetween = 10, nWithin = 10, fun2 = \"rpois\")\nobsMean = sapply(test$data, mean)\ntrueMean = test$mu\nboxplot(test$data, las = 1, bty = 'n')\npoints(seq_along(test$data) - .25, obsMean, pch = 1, col = 'dodgerblue')\npoints(seq_along(test$data) - .25, trueMean, pch = 1, col = 'darkmagenta')\n\n# two versions of the estimator: check they are completely equal\nJS = JS.mean(obsMean)\nJS2 = JS.est(test$data)\nall(mapply(function(x, y) all.equal(x, y), JS, JS2$z))\n\n# add JS to boxplot\npoints(seq_along(test$data) + .25, test$mu, pch = 2, col = 'firebrick2')\n\n# shrinkageplots\nshrinkagePlot(JS, obsMean, trueMean, estName = \"James\\nStein\",\n              type = 'b', lty = 1, pch = 19, yaxt = 'n', bty = 'n', ylab = '')\naxis(2, at = 2:0, labels = c('Mean', 'James\\nStein', 'True\\nMean'), las = 1)\n\n# RMSE should be smaller for James Stein\nr0 = RMSE(obsMean, trueMean)\nr1 = RMSE(JS, trueMean)\nr1 < r0\n\n# additional plot options\nshrinkagePlot(JS, test$mu, trueMean,\n              usePlotly = FALSE, useGgplot = TRUE)\nsuppressWarnings(shrinkagePlot(JS, test$mu, trueMean,\n                               usePlotly = TRUE, useGgplot = FALSE))\nsuppressWarnings(shrinkagePlot(JS, test$mu, trueMean,\n                               usePlotly = TRUE, useGgplot = TRUE))\n\n\n# Hierarchical bayes testing:\n# Effron & Morris\ndat = read.table('Datasets/EffronMorris.txt', header = TRUE, sep = ',')\ntest = hierarchicalBayes(dat$avg45, debug = TRUE)\n\n# Soccer data\ndat = read.table('Datasets/Eredivisie2015.txt', header = TRUE, sep = \" \")\ndat$Date = as.Date(dat$Date)\nDate = as.Date(\"25-10-2015\", format = \"%d-%m-%Y\")\ntmp = calcPointsDate(dat, Date)\nobsCount = tmp[1, ]\nobsN = tmp[2, ]\ntest = hierarchicalBayes(obsCount, samples = 1000L, debug = TRUE)\n\n# Olympics\ndat = read.table(\"Datasets/Olympics2016.txt\", header = TRUE, sep = \" \")\ntest = hierarchicalBayes(dat$Medals)\n\n# Simulated data\ntest = hierarchicalBayes(obsMean)\n\n",
    "created" : 1479288571447.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3136025849",
    "id" : "6A8E00C3",
    "lastKnownWriteTime" : 1479292455,
    "last_content_update" : 1479292455035,
    "path" : "C:/Users/donvd/_Laptop/ResMas/Conference/TquanT/Shiny/JamesSteinRemake/functionTests.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}